server:
  port: ${CRUD_PORT:8080}

environment:
  servers:
    FRS_CORE:
      url: ${CORE_URL:http://frs-api:8080}

app:
  security:
    oauth2:
      clients:
        COMMON:
          access-token-validity: 2400
          authorities: ROLE_APP_LOGIN
          authorized-grant-types: password,refresh_token
          client-id: CommonClientId
          client-scope: all
          client-secret: password
          refresh-token-validity: 1209600
          resource-ids: authorization

spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRES_URL:jdbc:postgresql://frs-postgres-db:5432/frs}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  jpa:
    properties:
      hibernate:
        default_schema: public
        jdbc.lob.non_contextual_creation: true # fix for Caused by: java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
    hibernate:
      ddl-auto: none
    database: postgresql
    open-in-view: true
    generate-ddl: false
  mail:
    enable: ${ENABLE_EMAIL_SERVER:false}
    sender: ${FRS_EMAIL:example@example.com}
    host: ${POSTFIX_HOST:example.com}
    port: 25
    test-connection: false
    properties.mail:
      debug: true
      smtp:
        connectiontimeout: 12000
        writetimeout: 12000
        starttls:
          enable: true
        ssl:
          trust: ${POSTFIX_HOST}

host:
  full:
    dns:
      auth:
        link: http://localhost:${server.port}

logging:
  level:
    web: DEBUG
    org.springframework.web: DEBUG

registration:
  token:
    expires: 3600000
    scheduler:
      period: 300000